-- Test script for gshell Ghostlang FFI (v0.1 syntax)

print("=== GShell Ghostlang FFI Test ===")
print("")

-- Test 1: Print function
print("Test 1: Print Function")
print("âœ“ print() works")
print("")

-- Test 2: Environment variables
print("Test 2: Environment Variables")
setenv("GSHELL_TEST", "success")
print("âœ“ setenv() works")
print("âœ“ getenv('GSHELL_TEST') = " .. getenv("GSHELL_TEST"))
print("")

-- Test 3: Path existence
print("Test 3: Path Operations")
if path_exists("/tmp") then
    print("âœ“ path_exists('/tmp') = true")
else
    print("âœ— path_exists failed")
end
print("")

-- Test 4: Aliases
print("Test 4: Aliases")
alias("gtest", "echo test_alias")
print("âœ“ alias('gtest', 'echo test_alias') created")
print("")

-- Test 5: Command existence
print("Test 5: Command Existence")
if command_exists("ls") then
    print("âœ“ command_exists('ls') = true")
else
    print("âœ— command_exists failed")
end
print("")

-- Test 6: File I/O
print("Test 6: File I/O")
write_file("/tmp/gshell_ffi_test.txt", "Hello from FFI!")
print("âœ“ write_file() succeeded")
print("âœ“ read_file() = " .. read_file("/tmp/gshell_ffi_test.txt"))
print("")

-- Test 7: System info
print("Test 7: System Information")
print("âœ“ User: " .. get_user())
print("âœ“ Host: " .. get_hostname())
print("âœ“ CWD: " .. get_cwd())
print("")

-- Test 8: Git functions
print("Test 8: Git Functions")
if in_git_repo() then
    print("âœ“ in_git_repo() = true")
    print("  Branch: " .. git_branch())
    print("  Dirty: " .. tostring(git_dirty()))
else
    print("  (Not in git repo)")
end
print("")

print("=== All FFI Tests Complete! ===")
print("ðŸŽ‰ Ghostlang integration is working!")
